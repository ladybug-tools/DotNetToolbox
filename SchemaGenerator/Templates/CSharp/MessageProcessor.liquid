using System;
using System.Collections.Generic;
using System.Linq;
using Pollination.BrowserMessageHandler;

// Auto-generated
namespace {{ NameSpaceName }}
{
    public partial class {{ClassName}}
    {
        public static string SDKName = "{{NameSpaceName}}";
        public static string SDKVersion = "{{SDKVersion}}";
        private ServiceHub serviceHub;


        public {{ClassName}}(InteractionService service)
        {
            if (service == null) 
                throw new ArgumentNullException(nameof(service));

            // Initialize the ServiceHub
            serviceHub = new ServiceHub(sdkName:SDKName, sdkVersion: SDKVersion);

            // Cast to a delegate, use compiler to convert the types
            // Register methods to be callable from TypeScript
            {%- for method in Methods %}
            var delegate_{{method.MethodName}} = service.{{method.MethodName}};
            serviceHub.RegisterMethod("{{method.MethodName}}", delegate_{{method.MethodName}});
            {%- endfor %}

        }
    
        public void MessageJsonReceived(string json, Action<string> returnAction)
        {
            serviceHub.HandleWebMessageReceived(json, returnAction);
        }

    }
}

